import usbDetect from "usb-detection";
import { ledgerUSBVendorId } from "@ledgerhq/devices";
import { log } from "@ledgerhq/logs";
var deviceToLog = function (_a) {
    var productId = _a.productId, locationId = _a.locationId, deviceAddress = _a.deviceAddress;
    return "productId=" + productId + " locationId=" + locationId + " deviceAddress=" + deviceAddress;
};
var usbDebounce = 1000;
export var setUsbDebounce = function (n) {
    usbDebounce = n;
};
var monitoring = false;
var monitor = function () {
    if (!monitoring) {
        monitoring = true;
        usbDetect.startMonitoring();
    }
    return function () { };
};
// No better way for now. see https://github.com/LedgerHQ/ledgerjs/issues/434
process.on("exit", function () {
    if (monitoring) {
        // redeem the monitoring so the process can be terminated.
        usbDetect.stopMonitoring();
    }
});
export var listenDevices = function (onAdd, onRemove) {
    var unmonitor = monitor();
    var addEvent = "add:" + ledgerUSBVendorId;
    var removeEvent = "remove:" + ledgerUSBVendorId;
    var timeout;
    var add = function (device) {
        log("usb-detection", "add: " + deviceToLog(device));
        if (!timeout) {
            // a time is needed for the device to actually be connectable over HID..
            // we also take this time to not emit the device yet and potentially cancel it if a remove happens.
            timeout = setTimeout(function () {
                onAdd(device);
                timeout = null;
            }, usbDebounce);
        }
    };
    var remove = function (device) {
        log("usb-detection", "remove: " + deviceToLog(device));
        if (timeout) {
            clearTimeout(timeout);
            timeout = null;
        }
        else {
            onRemove(device);
        }
    };
    usbDetect.on(addEvent, add);
    usbDetect.on(removeEvent, remove);
    return function () {
        if (timeout)
            clearTimeout(timeout);
        // @ts-expect-error not all EventEmitter methods are covered in its definition file
        usbDetect.off(addEvent, add);
        // @ts-expect-error not all EventEmitter methods are covered in its definition file
        usbDetect.off(removeEvent, remove);
        unmonitor();
    };
};
//# sourceMappingURL=listenDevices.js.map