{"ast":null,"code":"var _jsxFileName = \"/Users/wangxiaoxu/Documents/project/bchain/substrate-front-end-template/src/KittyCards.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Card, Grid, Message, Modal, Form, Label } from 'semantic-ui-react';\nimport KittyAvatar from './KittyAvatar';\nimport { TxButton } from './substrate-lib/components'; // --- About Modal ---\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TransferModal = props => {\n  _s();\n\n  const {\n    kitty,\n    accountPair,\n    setStatus\n  } = props;\n  const [open, setOpen] = React.useState(false);\n  const [formValue, setFormValue] = React.useState({});\n\n  const formChange = key => (ev, el) => {\n    setFormValue({ ...formValue,\n      [key]: el.value\n    });\n  };\n\n  const confirmAndClose = unsub => {\n    unsub();\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setOpen(false),\n    onOpen: () => setOpen(true),\n    open: open,\n    trigger: /*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      color: \"blue\",\n      children: \"\\u8F6C\\u8BA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"\\u6BDB\\u5B69\\u8F6C\\u8BA9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"\\u6BDB\\u5B69 ID\",\n          readOnly: true,\n          value: kitty.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          fluid: true,\n          label: \"\\u8F6C\\u8BA9\\u5BF9\\u8C61\",\n          placeholder: \"\\u5BF9\\u65B9\\u5730\\u5740\",\n          onChange: formChange('target')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        basic: true,\n        color: \"grey\",\n        onClick: () => setOpen(false),\n        children: \"\\u53D6\\u6D88\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TxButton, {\n        accountPair: accountPair,\n        label: \"\\u786E\\u8BA4\\u8F6C\\u8BA9\",\n        type: \"SIGNED-TX\",\n        setStatus: setStatus,\n        onClick: confirmAndClose,\n        attrs: {\n          palletRpc: 'kittiesModule',\n          callable: 'transfer',\n          inputParams: [formValue.target, kitty.id],\n          paramFields: [true, true]\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}; // --- About Kitty Card ---\n\n\n_s(TransferModal, \"h2vA9TnvzvKVNtqNmMhLEJtwkcE=\");\n\n_c = TransferModal;\n\nconst KittyCard = props => {\n  const {\n    kitty,\n    accountPair,\n    setStatus\n  } = props;\n  const {\n    id = null,\n    dna = null,\n    owner = null\n  } = kitty;\n  const displayDna = dna && dna.join(', ');\n  const displayId = id === null ? '' : id < 10 ? `0${id}` : id.toString();\n  const isSelf = accountPair.address === kitty.owner;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [isSelf && /*#__PURE__*/_jsxDEV(Label, {\n      as: \"a\",\n      floating: true,\n      color: \"teal\",\n      children: \"\\u6211\\u7684\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(KittyAvatar, {\n      dna: dna\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"ID \\u53F7: \", displayId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n        style: {\n          overflowWrap: 'break-word'\n        },\n        children: [\"\\u57FA\\u56E0: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), displayDna]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            overflowWrap: 'break-word'\n          },\n          children: [\"\\u732B\\u5974:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 14\n          }, this), owner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n      extra: true,\n      style: {\n        textAlign: 'center'\n      },\n      children: owner === accountPair.address ? /*#__PURE__*/_jsxDEV(TransferModal, {\n        kitty: kitty,\n        accountPair: accountPair,\n        setStatus: setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this) : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_c2 = KittyCard;\n\nconst KittyCards = props => {\n  const {\n    kitties,\n    accountPair,\n    setStatus\n  } = props;\n\n  if (kitties.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Message, {\n      info: true,\n      children: /*#__PURE__*/_jsxDEV(Message.Header, {\n        children: [\"\\u73B0\\u5728\\u8FDE\\u4E00\\u53EA\\u6BDB\\u5B69\\u90FD\\u6728\\u6709\\uFF0C\\u8D76\\u5FEB\\u521B\\u5EFA\\u4E00\\u53EA\\xA0\", /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"point-down\",\n          children: \"\\uD83D\\uDC47\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    columns: 3,\n    children: kitties.map((kitty, i) => /*#__PURE__*/_jsxDEV(Grid.Column, {\n      children: /*#__PURE__*/_jsxDEV(KittyCard, {\n        kitty: kitty,\n        accountPair: accountPair,\n        setStatus: setStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this)\n    }, `kitty-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = KittyCards;\nexport default KittyCards;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TransferModal\");\n$RefreshReg$(_c2, \"KittyCard\");\n$RefreshReg$(_c3, \"KittyCards\");","map":{"version":3,"sources":["/Users/wangxiaoxu/Documents/project/bchain/substrate-front-end-template/src/KittyCards.js"],"names":["React","Button","Card","Grid","Message","Modal","Form","Label","KittyAvatar","TxButton","TransferModal","props","kitty","accountPair","setStatus","open","setOpen","useState","formValue","setFormValue","formChange","key","ev","el","value","confirmAndClose","unsub","id","palletRpc","callable","inputParams","target","paramFields","KittyCard","dna","owner","displayDna","join","displayId","toString","isSelf","address","overflowWrap","textAlign","KittyCards","kitties","length","map","i"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Card, Grid, Message, Modal, Form, Label } from 'semantic-ui-react'\n\nimport KittyAvatar from './KittyAvatar'\nimport { TxButton } from './substrate-lib/components'\n\n// --- About Modal ---\n\nconst TransferModal = props => {\n  const { kitty, accountPair, setStatus } = props\n  const [open, setOpen] = React.useState(false)\n  const [formValue, setFormValue] = React.useState({})\n\n  const formChange = key => (ev, el) => {\n    setFormValue({ ...formValue, [key]: el.value })\n  }\n\n  const confirmAndClose = (unsub) => {\n    unsub()\n    setOpen(false)\n  }\n\n  return <Modal onClose={() => setOpen(false)} onOpen={() => setOpen(true)} open={open}\n    trigger={<Button basic color='blue'>转让</Button>}>\n    <Modal.Header>毛孩转让</Modal.Header>\n    <Modal.Content><Form>\n      <Form.Input fluid label='毛孩 ID' readOnly value={kitty.id}/>\n      <Form.Input fluid label='转让对象' placeholder='对方地址' onChange={formChange('target')}/>\n    </Form></Modal.Content>\n    <Modal.Actions>\n      <Button basic color='grey' onClick={() => setOpen(false)}>取消</Button>\n      <TxButton\n        accountPair={accountPair} label='确认转让' type='SIGNED-TX' setStatus={setStatus}\n        onClick={confirmAndClose}\n        attrs={{\n          palletRpc: 'kittiesModule',\n          callable: 'transfer',\n          inputParams: [formValue.target, kitty.id],\n          paramFields: [true, true]\n        }}\n      />\n    </Modal.Actions>\n  </Modal>\n}\n\n// --- About Kitty Card ---\n\nconst KittyCard = props => {\n  const { kitty, accountPair, setStatus } = props\n  const { id = null, dna = null, owner = null } = kitty\n  const displayDna = dna && dna.join(', ')\n  const displayId = id === null ? '' : (id < 10 ? `0${id}` : id.toString())\n  const isSelf = accountPair.address === kitty.owner\n\n  return <Card>\n    { isSelf && <Label as='a' floating color='teal'>我的</Label> }\n    <KittyAvatar dna={dna} />\n    <Card.Content>\n      <Card.Header>ID 号: {displayId}</Card.Header>\n      <Card.Meta style={{ overflowWrap: 'break-word' }}>\n        基因: <br/>\n        {displayDna}\n      </Card.Meta>\n      <Card.Description>\n        <p style={{ overflowWrap: 'break-word' }}>\n          猫奴:<br/>\n          {owner}\n        </p>\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra style={{ textAlign: 'center' }}>{ owner === accountPair.address\n      ? <TransferModal kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n      : ''\n    }</Card.Content>\n  </Card>\n}\n\nconst KittyCards = props => {\n  const { kitties, accountPair, setStatus } = props\n\n  if (kitties.length === 0) {\n    return <Message info>\n      <Message.Header>现在连一只毛孩都木有，赶快创建一只&nbsp;\n        <span role='img' aria-label='point-down'>👇</span>\n      </Message.Header>\n    </Message>\n  }\n\n  return <Grid columns={3}>{kitties.map((kitty, i) =>\n    <Grid.Column key={`kitty-${i}`}>\n      <KittyCard kitty={kitty} accountPair={accountPair} setStatus={setStatus}/>\n    </Grid.Column>\n  )}</Grid>\n}\n\nexport default KittyCards"]},"metadata":{},"sourceType":"module"}