{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-var-requires */\n\n\nimport { assert, assertReturn, BN_ZERO, formatBalance, isFunction, isString, isU8a, logger, stringCamelCase, stringify, u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { DoNotConstruct } from \"../codec/DoNotConstruct.js\";\nimport { Json } from \"../codec/Json.js\";\nimport { Raw } from \"../codec/Raw.js\";\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { decorateConstants, decorateExtrinsics } from \"../metadata/decorate/index.js\";\nimport { Metadata } from \"../metadata/Metadata.js\";\nimport { createClass, getTypeClass } from \"./createClass.js\";\nimport { createTypeUnsafe } from \"./createType.js\";\nimport { getTypeDef } from \"./getTypeDef.js\";\nconst l = logger('registry'); // create error mapping from metadata\n\nfunction injectErrors(_, metadata, metadataErrors) {\n  const modules = metadata.asLatest.modules; // decorate the errors\n\n  modules.forEach(({\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(name);\n    errors.forEach(({\n      docs,\n      name\n    }, index) => {\n      const eventIndex = new Uint8Array([sectionIndex, index]);\n      metadataErrors[u8aToHex(eventIndex)] = {\n        docs: docs.map(d => d.toString()),\n        index,\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      };\n    });\n  });\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, metadata, metadataEvents) {\n  // decorate the events\n  metadata.asLatest.modules.filter(({\n    events\n  }) => events.isSome).forEach(({\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(name);\n    events.unwrap().forEach((meta, methodIndex) => {\n      const methodName = meta.name.toString();\n      const typeDef = meta.args.map(arg => getTypeDef(arg));\n      let Types = null; // Lazy create the actual type classes right at the point of use\n\n      const getTypes = () => {\n        if (!Types) {\n          Types = typeDef.map(typeDef => getTypeClass(registry, typeDef));\n        }\n\n        return Types;\n      };\n\n      metadataEvents[u8aToHex(new Uint8Array([sectionIndex, methodIndex]))] = class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, getTypes(), typeDef, meta, sectionName, methodName);\n        }\n\n      };\n    });\n  });\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, metadata, metadataCalls) {\n  const extrinsics = decorateExtrinsics(registry, metadata.asLatest, metadata.version); // decorate the extrinsics\n\n  Object.values(extrinsics).forEach(methods => Object.values(methods).forEach(method => {\n    metadataCalls[u8aToHex(method.callIndex)] = method;\n  }));\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  var _constants$system;\n\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = (_constants$system = constants.system) === null || _constants$system === void 0 ? void 0 : _constants$system.ss58Prefix;\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createType('ChainProperties', {\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  });\n}\n\nvar _classes = /*#__PURE__*/_classPrivateFieldLooseKey(\"classes\");\n\nvar _definitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"definitions\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nvar _metadataCalls = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataCalls\");\n\nvar _metadataErrors = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataErrors\");\n\nvar _metadataEvents = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataEvents\");\n\nvar _unknownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"unknownTypes\");\n\nvar _chainProperties = /*#__PURE__*/_classPrivateFieldLooseKey(\"chainProperties\");\n\nvar _hasher = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasher\");\n\nvar _knownDefaults = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefaults\");\n\nvar _knownDefinitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefinitions\");\n\nvar _knownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownTypes\");\n\nvar _signedExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"signedExtensions\");\n\nvar _userExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"userExtensions\");\n\nexport class TypeRegistry {\n  constructor(createdAtHash) {\n    Object.defineProperty(this, _classes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _definitions, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _metadata, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _metadataCalls, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataErrors, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataEvents, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _unknownTypes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _chainProperties, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _hasher, {\n      writable: true,\n      value: blake2AsU8a\n    });\n    Object.defineProperty(this, _knownDefaults, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownDefinitions, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownTypes, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _signedExtensions, {\n      writable: true,\n      value: fallbackExtensions\n    });\n    Object.defineProperty(this, _userExtensions, {\n      writable: true,\n      value: void 0\n    });\n    this.createdAtHash = void 0;\n    _classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults] = _objectSpread({\n      Json,\n      Metadata,\n      Raw\n    }, baseTypes);\n    _classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions] = definitions;\n    this.init();\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  init() {\n    // start clean\n    _classPrivateFieldLooseBase(this, _classes)[_classes] = new Map();\n    _classPrivateFieldLooseBase(this, _definitions)[_definitions] = new Map();\n    _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes] = new Map();\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = {}; // register know, first classes then on-demand-created definitions\n\n    this.register(_classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults]);\n    Object.values(_classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions]).forEach(({\n      types\n    }) => this.register(types));\n    return this;\n  }\n\n  get chainDecimals() {\n    var _classPrivateFieldLoo;\n\n    if ((_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo !== void 0 && _classPrivateFieldLoo.tokenDecimals.isSome) {\n      const allDecimals = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _classPrivateFieldLoo2;\n\n    return (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo2 !== void 0 && _classPrivateFieldLoo2.ss58Format.isSome ? _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _classPrivateFieldLoo3;\n\n    if ((_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo3 !== void 0 && _classPrivateFieldLoo3.tokenSymbol.isSome) {\n      const allTokens = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(s => s.toString());\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n  /**\n   * @description Returns tru if the type is in a Compat format\n   */\n\n\n  isLookupType(value) {\n    return /Lookup\\d+$/.test(value);\n  }\n  /**\n   * @description Creates a lookup string from the supplied id\n   */\n\n\n  createLookupType(lookupId) {\n    return `Lookup${lookupId.toString()}`;\n  }\n\n  get knownTypes() {\n    return _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes];\n  }\n\n  get lookup() {\n    throw new Error('Unimplemented'); // return this.metadata.lookup;\n  }\n\n  get metadata() {\n    assert(_classPrivateFieldLooseBase(this, _metadata)[_metadata], 'Metadata has not been set on this registry');\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata];\n  }\n\n  get unknownTypes() {\n    return [..._classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].keys()];\n  }\n\n  get signedExtensions() {\n    return _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions];\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    return createClass(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createTypeUnsafe(this, type, params);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createTypeUnsafe(type, params, options) {\n    return createTypeUnsafe(this, type, params, options);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const hexIndex = u8aToHex(callIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls][hexIndex], `findMetaCall: Unable to find Call with index ${hexIndex}/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const hexIndex = u8aToHex(isU8a(errorIndex) ? errorIndex : new Uint8Array([errorIndex.index.toNumber(), errorIndex.error.toNumber()]));\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors][hexIndex], `findMetaError: Unable to find Error with index ${hexIndex}/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const hexIndex = u8aToHex(eventIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents][hexIndex], `findMetaEvent: Unable to find Event with index ${hexIndex}/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown) {\n    let Type = _classPrivateFieldLooseBase(this, _classes)[_classes].get(name); // we have not already created the type, attempt it\n\n\n    if (!Type) {\n      const definition = _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(name);\n\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClass(this, definition);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n\n        _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].set(name, true);\n\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, Type);\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties];\n  }\n\n  getClassName(clazz) {\n    const entry = [..._classPrivateFieldLooseBase(this, _classes)[_classes].entries()].find(([, test]) => test === clazz);\n    return entry ? entry[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _classPrivateFieldLoo4, _classPrivateFieldLoo5, _classPrivateFieldLoo6, _classPrivateFieldLoo7, _classPrivateFieldLoo8;\n\n    return (_classPrivateFieldLoo4 = _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes]) === null || _classPrivateFieldLoo4 === void 0 ? void 0 : (_classPrivateFieldLoo5 = _classPrivateFieldLoo4.typesBundle) === null || _classPrivateFieldLoo5 === void 0 ? void 0 : (_classPrivateFieldLoo6 = _classPrivateFieldLoo5.spec) === null || _classPrivateFieldLoo6 === void 0 ? void 0 : (_classPrivateFieldLoo7 = _classPrivateFieldLoo6[specName]) === null || _classPrivateFieldLoo7 === void 0 ? void 0 : (_classPrivateFieldLoo8 = _classPrivateFieldLoo7.instances) === null || _classPrivateFieldLoo8 === void 0 ? void 0 : _classPrivateFieldLoo8[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    return assertReturn(this.get(name), msg || `type ${name} not found`);\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'payload', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'extrinsic', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  hasClass(name) {\n    return _classPrivateFieldLooseBase(this, _classes)[_classes].has(name);\n  }\n\n  hasDef(name) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].has(name);\n  }\n\n  hasType(name) {\n    return !_classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', _classPrivateFieldLooseBase(this, _hasher)[_hasher](data));\n  } // eslint-disable-next-line no-dupe-class-members\n\n\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      assert(isFunction(arg2), () => `Expected class definition passed to '${arg1}' registration`);\n      assert(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);\n\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    Object.entries(obj).forEach(([name, type]) => {\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n        assert(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it\n\n        if (_classPrivateFieldLooseBase(this, _classes)[_classes].has(name)) {\n          _classPrivateFieldLooseBase(this, _classes)[_classes].delete(name);\n        }\n\n        _classPrivateFieldLooseBase(this, _definitions)[_definitions].set(name, def);\n      }\n    });\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties] = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    _classPrivateFieldLooseBase(this, _hasher)[_hasher] = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = knownTypes;\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _metadata)[_metadata] = metadata.asLatest;\n    injectExtrinsics(this, metadata, _classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls]);\n    injectErrors(this, metadata, _classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors]);\n    injectEvents(this, metadata, _classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents]); // setup the available extensions\n\n    this.setSignedExtensions(signedExtensions || (metadata.asLatest.extrinsic.version.gt(BN_ZERO) ? metadata.asLatest.extrinsic.signedExtensions.map(key => key.toString()) : fallbackExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions] = signedExtensions;\n    _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions] = userExtensions;\n    const unknown = findUnknownExtensions(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/wangxiaoxu/Documents/project/bchain/substrate-front-end-template/node_modules/@polkadot/types/create/registry.js"],"names":["_defineProperty","_classPrivateFieldLooseBase","_classPrivateFieldLooseKey","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","assert","assertReturn","BN_ZERO","formatBalance","isFunction","isString","isU8a","logger","stringCamelCase","stringify","u8aToHex","blake2AsU8a","DoNotConstruct","Json","Raw","expandExtensionTypes","fallbackExtensions","findUnknownExtensions","GenericEventData","baseTypes","definitions","decorateConstants","decorateExtrinsics","Metadata","createClass","getTypeClass","createTypeUnsafe","getTypeDef","l","injectErrors","_","metadata","metadataErrors","modules","asLatest","errors","index","name","_sectionIndex","sectionIndex","version","toNumber","sectionName","docs","eventIndex","Uint8Array","map","d","toString","method","section","injectEvents","registry","metadataEvents","events","isSome","unwrap","meta","methodIndex","methodName","typeDef","args","arg","Types","getTypes","constructor","value","injectExtrinsics","metadataCalls","extrinsics","values","methods","callIndex","extractProperties","_constants$system","original","getChainProperties","constants","ss58Format","system","ss58Prefix","tokenDecimals","tokenSymbol","createType","_classes","_definitions","_metadata","_metadataCalls","_metadataErrors","_metadataEvents","_unknownTypes","_chainProperties","_hasher","_knownDefaults","_knownDefinitions","_knownTypes","_signedExtensions","_userExtensions","TypeRegistry","createdAtHash","writable","Map","init","register","types","chainDecimals","_classPrivateFieldLoo","allDecimals","b","chainSS58","_classPrivateFieldLoo2","undefined","chainTokens","_classPrivateFieldLoo3","allTokens","s","getDefaults","unit","isLookupType","test","createLookupType","lookupId","knownTypes","lookup","Error","unknownTypes","signedExtensions","type","params","options","findMetaCall","hexIndex","findMetaError","errorIndex","error","findMetaEvent","get","withUnknown","Type","definition","BaseType","warn","set","with","getClassName","clazz","entry","entries","find","getDefinition","typeName","getModuleInstances","specName","moduleName","_classPrivateFieldLoo4","_classPrivateFieldLoo5","_classPrivateFieldLoo6","_classPrivateFieldLoo7","_classPrivateFieldLoo8","typesBundle","spec","instances","getOrThrow","msg","getOrUnknown","getSignedExtensionExtra","getSignedExtensionTypes","hasClass","has","hasDef","hasType","hash","data","arg1","arg2","_registerObject","obj","def","delete","setChainProperties","properties","setHasher","hasher","setKnownTypes","setMetadata","userExtensions","setSignedExtensions","extrinsic","gt","unknown","join"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classPrivateFieldLooseBase from \"@babel/runtime/helpers/esm/classPrivateFieldLooseBase\";\nimport _classPrivateFieldLooseKey from \"@babel/runtime/helpers/esm/classPrivateFieldLooseKey\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2021 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/* eslint-disable @typescript-eslint/no-var-requires */\nimport { assert, assertReturn, BN_ZERO, formatBalance, isFunction, isString, isU8a, logger, stringCamelCase, stringify, u8aToHex } from '@polkadot/util';\nimport { blake2AsU8a } from '@polkadot/util-crypto';\nimport { DoNotConstruct } from \"../codec/DoNotConstruct.js\";\nimport { Json } from \"../codec/Json.js\";\nimport { Raw } from \"../codec/Raw.js\";\nimport { expandExtensionTypes, fallbackExtensions, findUnknownExtensions } from \"../extrinsic/signedExtensions/index.js\";\nimport { GenericEventData } from \"../generic/Event.js\";\nimport * as baseTypes from \"../index.types.js\";\nimport * as definitions from \"../interfaces/definitions.js\";\nimport { decorateConstants, decorateExtrinsics } from \"../metadata/decorate/index.js\";\nimport { Metadata } from \"../metadata/Metadata.js\";\nimport { createClass, getTypeClass } from \"./createClass.js\";\nimport { createTypeUnsafe } from \"./createType.js\";\nimport { getTypeDef } from \"./getTypeDef.js\";\nconst l = logger('registry'); // create error mapping from metadata\n\nfunction injectErrors(_, metadata, metadataErrors) {\n  const modules = metadata.asLatest.modules; // decorate the errors\n\n  modules.forEach(({\n    errors,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(name);\n    errors.forEach(({\n      docs,\n      name\n    }, index) => {\n      const eventIndex = new Uint8Array([sectionIndex, index]);\n      metadataErrors[u8aToHex(eventIndex)] = {\n        docs: docs.map(d => d.toString()),\n        index,\n        method: name.toString(),\n        name: name.toString(),\n        section: sectionName\n      };\n    });\n  });\n} // create event classes from metadata\n\n\nfunction injectEvents(registry, metadata, metadataEvents) {\n  // decorate the events\n  metadata.asLatest.modules.filter(({\n    events\n  }) => events.isSome).forEach(({\n    events,\n    index,\n    name\n  }, _sectionIndex) => {\n    const sectionIndex = metadata.version >= 12 ? index.toNumber() : _sectionIndex;\n    const sectionName = stringCamelCase(name);\n    events.unwrap().forEach((meta, methodIndex) => {\n      const methodName = meta.name.toString();\n      const typeDef = meta.args.map(arg => getTypeDef(arg));\n      let Types = null; // Lazy create the actual type classes right at the point of use\n\n      const getTypes = () => {\n        if (!Types) {\n          Types = typeDef.map(typeDef => getTypeClass(registry, typeDef));\n        }\n\n        return Types;\n      };\n\n      metadataEvents[u8aToHex(new Uint8Array([sectionIndex, methodIndex]))] = class extends GenericEventData {\n        constructor(registry, value) {\n          super(registry, value, getTypes(), typeDef, meta, sectionName, methodName);\n        }\n\n      };\n    });\n  });\n} // create extrinsic mapping from metadata\n\n\nfunction injectExtrinsics(registry, metadata, metadataCalls) {\n  const extrinsics = decorateExtrinsics(registry, metadata.asLatest, metadata.version); // decorate the extrinsics\n\n  Object.values(extrinsics).forEach(methods => Object.values(methods).forEach(method => {\n    metadataCalls[u8aToHex(method.callIndex)] = method;\n  }));\n} // extract additional properties from the metadata\n\n\nfunction extractProperties(registry, metadata) {\n  var _constants$system;\n\n  const original = registry.getChainProperties();\n  const constants = decorateConstants(registry, metadata.asLatest, metadata.version);\n  const ss58Format = (_constants$system = constants.system) === null || _constants$system === void 0 ? void 0 : _constants$system.ss58Prefix;\n\n  if (!ss58Format) {\n    return original;\n  }\n\n  const {\n    tokenDecimals,\n    tokenSymbol\n  } = original || {};\n  return registry.createType('ChainProperties', {\n    ss58Format,\n    tokenDecimals,\n    tokenSymbol\n  });\n}\n\nvar _classes = /*#__PURE__*/_classPrivateFieldLooseKey(\"classes\");\n\nvar _definitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"definitions\");\n\nvar _metadata = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadata\");\n\nvar _metadataCalls = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataCalls\");\n\nvar _metadataErrors = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataErrors\");\n\nvar _metadataEvents = /*#__PURE__*/_classPrivateFieldLooseKey(\"metadataEvents\");\n\nvar _unknownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"unknownTypes\");\n\nvar _chainProperties = /*#__PURE__*/_classPrivateFieldLooseKey(\"chainProperties\");\n\nvar _hasher = /*#__PURE__*/_classPrivateFieldLooseKey(\"hasher\");\n\nvar _knownDefaults = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefaults\");\n\nvar _knownDefinitions = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownDefinitions\");\n\nvar _knownTypes = /*#__PURE__*/_classPrivateFieldLooseKey(\"knownTypes\");\n\nvar _signedExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"signedExtensions\");\n\nvar _userExtensions = /*#__PURE__*/_classPrivateFieldLooseKey(\"userExtensions\");\n\nexport class TypeRegistry {\n  constructor(createdAtHash) {\n    Object.defineProperty(this, _classes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _definitions, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _metadata, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _metadataCalls, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataErrors, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _metadataEvents, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _unknownTypes, {\n      writable: true,\n      value: new Map()\n    });\n    Object.defineProperty(this, _chainProperties, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _hasher, {\n      writable: true,\n      value: blake2AsU8a\n    });\n    Object.defineProperty(this, _knownDefaults, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownDefinitions, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _knownTypes, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _signedExtensions, {\n      writable: true,\n      value: fallbackExtensions\n    });\n    Object.defineProperty(this, _userExtensions, {\n      writable: true,\n      value: void 0\n    });\n    this.createdAtHash = void 0;\n    _classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults] = _objectSpread({\n      Json,\n      Metadata,\n      Raw\n    }, baseTypes);\n    _classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions] = definitions;\n    this.init();\n\n    if (createdAtHash) {\n      this.createdAtHash = this.createType('Hash', createdAtHash);\n    }\n  }\n\n  init() {\n    // start clean\n    _classPrivateFieldLooseBase(this, _classes)[_classes] = new Map();\n    _classPrivateFieldLooseBase(this, _definitions)[_definitions] = new Map();\n    _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes] = new Map();\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = {}; // register know, first classes then on-demand-created definitions\n\n    this.register(_classPrivateFieldLooseBase(this, _knownDefaults)[_knownDefaults]);\n    Object.values(_classPrivateFieldLooseBase(this, _knownDefinitions)[_knownDefinitions]).forEach(({\n      types\n    }) => this.register(types));\n    return this;\n  }\n\n  get chainDecimals() {\n    var _classPrivateFieldLoo;\n\n    if ((_classPrivateFieldLoo = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo !== void 0 && _classPrivateFieldLoo.tokenDecimals.isSome) {\n      const allDecimals = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenDecimals.unwrap();\n\n      if (allDecimals.length) {\n        return allDecimals.map(b => b.toNumber());\n      }\n    }\n\n    return [12];\n  }\n\n  get chainSS58() {\n    var _classPrivateFieldLoo2;\n\n    return (_classPrivateFieldLoo2 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo2 !== void 0 && _classPrivateFieldLoo2.ss58Format.isSome ? _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].ss58Format.unwrap().toNumber() : undefined;\n  }\n\n  get chainTokens() {\n    var _classPrivateFieldLoo3;\n\n    if ((_classPrivateFieldLoo3 = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties]) !== null && _classPrivateFieldLoo3 !== void 0 && _classPrivateFieldLoo3.tokenSymbol.isSome) {\n      const allTokens = _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties].tokenSymbol.unwrap();\n\n      if (allTokens.length) {\n        return allTokens.map(s => s.toString());\n      }\n    }\n\n    return [formatBalance.getDefaults().unit];\n  }\n  /**\n   * @description Returns tru if the type is in a Compat format\n   */\n\n\n  isLookupType(value) {\n    return /Lookup\\d+$/.test(value);\n  }\n  /**\n   * @description Creates a lookup string from the supplied id\n   */\n\n\n  createLookupType(lookupId) {\n    return `Lookup${lookupId.toString()}`;\n  }\n\n  get knownTypes() {\n    return _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes];\n  }\n\n  get lookup() {\n    throw new Error('Unimplemented'); // return this.metadata.lookup;\n  }\n\n  get metadata() {\n    assert(_classPrivateFieldLooseBase(this, _metadata)[_metadata], 'Metadata has not been set on this registry');\n    return _classPrivateFieldLooseBase(this, _metadata)[_metadata];\n  }\n\n  get unknownTypes() {\n    return [..._classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].keys()];\n  }\n\n  get signedExtensions() {\n    return _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions];\n  }\n  /**\n   * @describe Creates an instance of the class\n   */\n\n\n  createClass(type) {\n    return createClass(this, type);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createType(type, ...params) {\n    return createTypeUnsafe(this, type, params);\n  }\n  /**\n   * @description Creates an instance of a type as registered\n   */\n\n\n  createTypeUnsafe(type, params, options) {\n    return createTypeUnsafe(this, type, params, options);\n  } // find a specific call\n\n\n  findMetaCall(callIndex) {\n    const hexIndex = u8aToHex(callIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls][hexIndex], `findMetaCall: Unable to find Call with index ${hexIndex}/[${callIndex.toString()}]`);\n  } // finds an error\n\n\n  findMetaError(errorIndex) {\n    const hexIndex = u8aToHex(isU8a(errorIndex) ? errorIndex : new Uint8Array([errorIndex.index.toNumber(), errorIndex.error.toNumber()]));\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors][hexIndex], `findMetaError: Unable to find Error with index ${hexIndex}/[${errorIndex.toString()}]`);\n  }\n\n  findMetaEvent(eventIndex) {\n    const hexIndex = u8aToHex(eventIndex);\n    return assertReturn(_classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents][hexIndex], `findMetaEvent: Unable to find Event with index ${hexIndex}/[${eventIndex.toString()}]`);\n  }\n\n  get(name, withUnknown) {\n    let Type = _classPrivateFieldLooseBase(this, _classes)[_classes].get(name); // we have not already created the type, attempt it\n\n\n    if (!Type) {\n      const definition = _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(name);\n\n      let BaseType; // we have a definition, so create the class now (lazily)\n\n      if (definition) {\n        BaseType = createClass(this, definition);\n      } else if (withUnknown) {\n        l.warn(`Unable to resolve type ${name}, it will fail on construction`);\n\n        _classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].set(name, true);\n\n        BaseType = DoNotConstruct.with(name);\n      }\n\n      if (BaseType) {\n        // NOTE If we didn't extend here, we would have strange artifacts. An example is\n        // Balance, with this, new Balance() instanceof u128 is true, but Balance !== u128\n        // Additionally, we now pass through the registry, which is a link to ourselves\n        Type = class extends BaseType {};\n\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, Type);\n      }\n    }\n\n    return Type;\n  }\n\n  getChainProperties() {\n    return _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties];\n  }\n\n  getClassName(clazz) {\n    const entry = [..._classPrivateFieldLooseBase(this, _classes)[_classes].entries()].find(([, test]) => test === clazz);\n    return entry ? entry[0] : undefined;\n  }\n\n  getDefinition(typeName) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].get(typeName);\n  }\n\n  getModuleInstances(specName, moduleName) {\n    var _classPrivateFieldLoo4, _classPrivateFieldLoo5, _classPrivateFieldLoo6, _classPrivateFieldLoo7, _classPrivateFieldLoo8;\n\n    return (_classPrivateFieldLoo4 = _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes]) === null || _classPrivateFieldLoo4 === void 0 ? void 0 : (_classPrivateFieldLoo5 = _classPrivateFieldLoo4.typesBundle) === null || _classPrivateFieldLoo5 === void 0 ? void 0 : (_classPrivateFieldLoo6 = _classPrivateFieldLoo5.spec) === null || _classPrivateFieldLoo6 === void 0 ? void 0 : (_classPrivateFieldLoo7 = _classPrivateFieldLoo6[specName]) === null || _classPrivateFieldLoo7 === void 0 ? void 0 : (_classPrivateFieldLoo8 = _classPrivateFieldLoo7.instances) === null || _classPrivateFieldLoo8 === void 0 ? void 0 : _classPrivateFieldLoo8[moduleName];\n  }\n\n  getOrThrow(name, msg) {\n    return assertReturn(this.get(name), msg || `type ${name} not found`);\n  }\n\n  getOrUnknown(name) {\n    return this.get(name, true);\n  }\n\n  getSignedExtensionExtra() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'payload', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  getSignedExtensionTypes() {\n    return expandExtensionTypes(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], 'extrinsic', _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n  }\n\n  hasClass(name) {\n    return _classPrivateFieldLooseBase(this, _classes)[_classes].has(name);\n  }\n\n  hasDef(name) {\n    return _classPrivateFieldLooseBase(this, _definitions)[_definitions].has(name);\n  }\n\n  hasType(name) {\n    return !_classPrivateFieldLooseBase(this, _unknownTypes)[_unknownTypes].get(name) && (this.hasClass(name) || this.hasDef(name));\n  }\n\n  hash(data) {\n    return this.createType('CodecHash', _classPrivateFieldLooseBase(this, _hasher)[_hasher](data));\n  }\n\n  // eslint-disable-next-line no-dupe-class-members\n  register(arg1, arg2) {\n    // NOTE Constructors appear as functions here\n    if (isFunction(arg1)) {\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1.name, arg1);\n    } else if (isString(arg1)) {\n      assert(isFunction(arg2), () => `Expected class definition passed to '${arg1}' registration`);\n      assert(arg1 !== arg2.toString(), () => `Unable to register circular ${arg1} === ${arg1}`);\n\n      _classPrivateFieldLooseBase(this, _classes)[_classes].set(arg1, arg2);\n    } else {\n      this._registerObject(arg1);\n    }\n  }\n\n  _registerObject(obj) {\n    Object.entries(obj).forEach(([name, type]) => {\n      if (isFunction(type)) {\n        // This _looks_ a bit funny, but `typeof Clazz === 'function'\n        _classPrivateFieldLooseBase(this, _classes)[_classes].set(name, type);\n      } else {\n        const def = isString(type) ? type : stringify(type);\n        assert(name !== def, () => `Unable to register circular ${name} === ${def}`); // we already have this type, remove the classes registered for it\n\n        if (_classPrivateFieldLooseBase(this, _classes)[_classes].has(name)) {\n          _classPrivateFieldLooseBase(this, _classes)[_classes].delete(name);\n        }\n\n        _classPrivateFieldLooseBase(this, _definitions)[_definitions].set(name, def);\n      }\n    });\n  } // sets the chain properties\n\n\n  setChainProperties(properties) {\n    if (properties) {\n      _classPrivateFieldLooseBase(this, _chainProperties)[_chainProperties] = properties;\n    }\n  }\n\n  setHasher(hasher) {\n    _classPrivateFieldLooseBase(this, _hasher)[_hasher] = hasher || blake2AsU8a;\n  }\n\n  setKnownTypes(knownTypes) {\n    _classPrivateFieldLooseBase(this, _knownTypes)[_knownTypes] = knownTypes;\n  } // sets the metadata\n\n\n  setMetadata(metadata, signedExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _metadata)[_metadata] = metadata.asLatest;\n    injectExtrinsics(this, metadata, _classPrivateFieldLooseBase(this, _metadataCalls)[_metadataCalls]);\n    injectErrors(this, metadata, _classPrivateFieldLooseBase(this, _metadataErrors)[_metadataErrors]);\n    injectEvents(this, metadata, _classPrivateFieldLooseBase(this, _metadataEvents)[_metadataEvents]); // setup the available extensions\n\n    this.setSignedExtensions(signedExtensions || (metadata.asLatest.extrinsic.version.gt(BN_ZERO) ? metadata.asLatest.extrinsic.signedExtensions.map(key => key.toString()) : fallbackExtensions), userExtensions); // setup the chain properties with format overrides\n\n    this.setChainProperties(extractProperties(this, metadata));\n  } // sets the available signed extensions\n\n\n  setSignedExtensions(signedExtensions = fallbackExtensions, userExtensions) {\n    _classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions] = signedExtensions;\n    _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions] = userExtensions;\n    const unknown = findUnknownExtensions(_classPrivateFieldLooseBase(this, _signedExtensions)[_signedExtensions], _classPrivateFieldLooseBase(this, _userExtensions)[_userExtensions]);\n\n    if (unknown.length) {\n      l.warn(`Unknown signed extensions ${unknown.join(', ')} found, treating them as no-effect`);\n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}